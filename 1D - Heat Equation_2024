import numpy as np
import matplotlib.pyplot as plt

# Parameters
L = 10.0             # Length of the rod
T_L = 100.0          # Temperature at the left end
T_R = 50.0           # Temperature at the right end
T_0 = 25.0           # Initial temperature of the rod
alpha = 1         # Thermal diffusivity
Nx = 50              # Number of spatial points
dx = L / (Nx - 1)    # Spatial step size
dt = 0.01            # Time step size
t_max = 10.0         # Maximum time

# Calculate the stability condition (CFL condition)
stability_condition = alpha * dt / dx**2
print(f"Stability Condition (alpha*dt/dx^2): {stability_condition}")
if stability_condition > 0.5:
    print("Warning: The solution may be unstable!")

# Spatial grid
x = np.linspace(0, L, Nx)

# Initial temperature distribution
T = np.ones(Nx) * T_0
T[0] = T_L
T[-1] = T_R

# Time integration
nt = int(t_max / dt)  # Number of time steps
T_record = []

# Time loop
for t in range(nt):
    T_new = T.copy()
    for i in range(1, Nx-1):
        T_new[i] = T[i] + alpha * dt / dx**2 * (T[i+1] - 2*T[i] + T[i-1])
    T = T_new
    T_record.append(T.copy())

# Plot the results
plt.figure(figsize=(10, 6))
times_to_plot = [0, int(2/dt), int(5/dt), nt-1]  # Times corresponding to t = 0, 2, 5, 10
for i, t in enumerate(times_to_plot):
    plt.plot(x, T_record[t], label=f't={t*dt:.2f}')
plt.xlabel('Position along the rod (x)')
plt.ylabel('Temperature (T)')
plt.title('Temperature Distribution Along the Rod Over Time')
plt.legend()
plt.grid(True)
plt.show()
